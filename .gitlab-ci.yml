#
#  GitLab CI/CD configuration file
#   This file describes how to build and test our projects
#   You probably shouldn't edit this one for the CptS223 class
#   More information on GitLab CI/CD is here:
#      https://docs.gitlab.com/ce/ci/yaml/
#
#  Copyright 2018
#  Contributors:
#    Aaron S. Crandall <acrandal@wsu.edu>
#    Sean Kallaher <sean.kallaher@wsu.edu>
#

# Default Docker image is Alpine Linux's latest release
#  Each job in the pipeline will run in a separate Alpine Linux environment
image: alpine:latest

# Defining the two stages for this CI pipeline
#   Stage 1 - build the software
#   Stage 2 - test the starter software
#   Stage 3 - test the assignment requirements
stages:
   - build
   - starter-tests
   - base-tests
           
# This is the job template which each assignment will extend to run its build
.build:
    stage: build
    before_script:
        - apk add --update g++ make
        - cd $ASSIGNMENT_DIR
    script:
        - make build
    allow_failure: true
    tags:
        - linux
        - docker

# This is a template for all test templates to encompass dependencies and such
# NOTE: This is not to be directly extended by an assigment,
#   but only by another test template such as .starter-tests or .base-tests
.test:
    before_script:
        - echo "http://dl-3.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories
        - echo "http://dl-3.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories
        - apk add --update g++ make gmock gtest gtest-dev bash
        - cd $ASSIGNMENT_DIR
    tags:
        - linux
        - docker

# This is the job template which each assignment will extend to run its tests
.starter-tests:
    extends: .test
    stage: starter-tests
    script:
        - make starter-tests

# This is the job template which each assignment will extend to run its tests
.base-tests:
    extends: .test
    stage: base-tests
    script:
        - make base-tests
    allow_failure: true
                
#******************************** MA2 ****************************#
# MA1 is the Hello World assignment
MA1-build:
    extends: .build
    variables:
        ASSIGNMENT_DIR: "MA1"

# Run the starter code tests
MA1-starter-tests:
    extends: .starter-tests
    variables:
        ASSIGNMENT_DIR: "MA1"

# Run the base code tests
MA1-base-tests:
    extends: .base-tests
    variables:
        ASSIGNMENT_DIR: "MA1"
# END of MA1 - Hello World assignment

#******************************** MA2 ****************************#
# MA2 is the Big Five assignment
MA2-BigFive-build:
    extends: .build
    variables:
        ASSIGNMENT_DIR: "MA2-BigFive"

# Run the starter code tests
MA2-BigFive-starter-tests:
    extends: .starter-tests
    variables:
        ASSIGNMENT_DIR: "MA2-BigFive"

# Run the base code tests
MA2-BigFive-base-tests:
    extends: .base-tests
    variables:
        ASSIGNMENT_DIR: "MA2-BigFive"
# END of MA2 - Big Five assignment

#******************************** MA3 ****************************#
# MA3 is the BST Level Order (and Big Five) project
MA3-BSTLevelOrder-build:
  extends: .build
  variables:
    ASSIGNMENT_DIR: "MA3-BSTLevelOrder"

# Run the starter code tests
MA3-BSTLevelOrder-starter-tests:
    extends: .starter-tests
    variables:
        ASSIGNMENT_DIR: "MA3-BSTLevelOrder"

# Run the base code tests
MA3-BSTLevelOrder-base-tests:
    extends: .base-tests
    variables:
        ASSIGNMENT_DIR: "MA3-BSTLevelOrder"
# END of MA3 - BST Level Order (and Big Five) project
