#
#  GitLab CI/CD configuration file
#   This file describes how to build and test our projects
#   You probably shouldn't edit this one for the CptS223 class
#   More information on GitLab CI/CD is here:
#      https://docs.gitlab.com/ce/ci/yaml/
#
#  Copyright 2018
#  Contributors:
#    Aaron S. Crandall <acrandal@wsu.edu>
#

# Default Docker image is Alpine Linux's latest release
#  Each job in the pipeline will run in a separate Alpine Linux environment
image: alpine:latest

# Every job will run the before_script before the main script lines
before_script:
    - echo "Initializing Environment" >> /dev/null
    - echo " This system uses Alpine Linux because it's small and efficient" >> /dev/null
    - echo " For info on Alpine Linux, go to alpinelinux.org" >> /dev/null
    - echo "http://dl-3.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories
    - echo "http://dl-3.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories
    - apk add --update --no-cache less util-linux pciutils usbutils coreutils binutils findutils grep gtest build-base gcc abuild binutils gtest-dev lcov gmock valgrind >> /dev/null

# Defining the two stages for this CI pipeline
#  Stage 1 - build the software, Stage 2 - test the software
stages:
    - build
    - check
    - starter-tests
    - base-tests
    - b-tests
    - a-tests
    - run

# MA1 is the Hello World assignment
MA1-build:
  stage: build
  script:
    - cd MA1
    - make build
  allow_failure: true
  tags:
    - linux
    - docker

MA1-test:
  stage: starter-tests
  script:
    - cd MA1
    - make test
  tags:
    - linux
    - docker

#MA1-coverage:
#  stage: test
#  script:
#    - cd MA1
#    - make coverage
#  tags:
#    - linux
#    - docker
#  artifacts:
#    paths:
#      - MA1/coverage_report
# MA1 End of Hello World

#******************************** MA2 ****************************#
# MA2 is the Big Five assignment
MA2-BigFive-build:
  stage: build
  script:
    - cd MA2-BigFive
    - make build
  allow_failure: true
  tags:
    - linux
    - docker

# Run the starter code tests
MA2-BigFive-starter-tests:
  stage: starter-tests
  script:
    - cd MA2-BigFive
    - make starter-tests
  tags:
    - linux
    - docker

# Run the base code tests
MA2-BigFive-base-tests:
  stage: base-tests
  script:
    - cd MA2-BigFive
    - make base-tests
  allow_failure: true
  tags:
    - linux
    - docker
# END of MA2 - Big Five assignment

#******************************** MA3 ****************************#
# MA3 is the BST Level Order (and Big Five) project
MA3-BSTLevelOrder-build:
  stage: build
  script:
    - cd MA3-BSTLevelOrder
    - make build
  allow_failure: true
  tags:
    - linux
    - docker

# Run the starter code tests
MA3-BSTLevelOrder-starter-tests:
  stage: starter-tests
  script:
    - cd MA3-BSTLevelOrder
    - make starter-tests
  tags:
    - linux
    - docker

# Run the base code tests
MA3-BSTLevelOrder-base-tests:
  stage: base-tests
  script:
    - cd MA3-BSTLevelOrder
    - make base-tests
  allow_failure: true
  tags:
    - linux
    - docker
# END of MA3 - BST Level Order (and Big Five) project
